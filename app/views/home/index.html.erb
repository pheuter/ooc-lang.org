<div class="content group">
	
	<div class="featured group">
	
		<div class="item group">
<pre class="textmate-source lazy"><span class="source source_ooc"><span class="meta meta_function meta_function_noparams meta_function_noparams_ooc"><span class="entity entity_name entity_name_function entity_name_function_ooc">main</span>: <span class="storage storage_type storage_type_function storage_type_function_ooc">func</span></span> <span class="meta meta_block meta_block_ooc">{
  <span class="string string_quoted string_quoted_double string_quoted_double_ooc">"Hello, world"</span> <span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">println</span>()</span>
}</span>

<span class="meta meta_function meta_function_params meta_function_params_ooc"><span class="entity entity_name entity_name_function entity_name_function_ooc">reduce</span>: <span class="storage storage_type storage_type_function storage_type_function_ooc">func</span> (<span class="meta meta_function meta_function_parameter meta_function_parameter_name meta_function_parameter_name_ooc"><span class="variable variable_parameter variable_parameter_ooc">f</span></span><span class="meta meta_function meta_function_parameter meta_function_parameter_type meta_function_parameter_type_ooc">: <span class="storage storage_type storage_type_ooc">Func</span></span> (<span class="meta meta_function meta_function_nameless-typed meta_function_nameless-typed_ooc"><span class="storage storage_type storage_type_ooc">T</span></span>, <span class="meta meta_function meta_function_nameless-typed meta_function_nameless-typed_ooc"><span class="storage storage_type storage_type_ooc">T</span></span>) <span class="keyword keyword_other keyword_other_ooc">-&gt;</span> <span class="storage storage_type storage_type_ooc">T</span></span>) <span class="meta meta_function meta_function_return-type meta_function_return-type_ooc"><span class="keyword keyword_other keyword_other_return-type keyword_other_return-type_ooc">-&gt;</span> <span class="storage storage_type storage_type_ooc">T</span></span> <span class="meta meta_block meta_block_ooc">{
    <span class="meta meta_definition meta_definition_variable meta_definition_variable_inferred meta_definition_variable_inferred_ooc"><span class="variable variable_other variable_other_ooc">iter</span> </span><span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ooc">:=</span> <span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">iterator</span>()</span>
    <span class="meta meta_definition meta_definition_variable meta_definition_variable_inferred meta_definition_variable_inferred_ooc"><span class="variable variable_other variable_other_ooc">acc</span> </span><span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ooc">:=</span> <span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">f</span>(<span class="variable variable_other variable_other_accessed variable_other_accessed_ooc">iter </span><span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">next</span>()</span>, <span class="variable variable_other variable_other_accessed variable_other_accessed_ooc">iter </span><span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">next</span>()</span>)</span>
    <span class="keyword keyword_control keyword_control_ooc">while</span>(<span class="variable variable_other variable_other_accessed variable_other_accessed_ooc">iter </span>hasNext?()) acc <span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ooc">=</span> <span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">f</span>(acc, <span class="variable variable_other variable_other_accessed variable_other_accessed_ooc">iter </span><span class="meta meta_function meta_function_call meta_function_call_ooc"><span class="support support_function support_function_any-method support_function_any-method_ooc">next</span>()</span>)</span>
    acc
}</span>

<span class="meta meta_class meta_class_ooc"><span class="entity entity_name entity_name_type entity_name_type_class entity_name_type_class_ooc">Cell</span>: <span class="storage storage_type storage_type_class storage_type_class_ooc">class</span> &lt;<span class="support support_type support_type_generic support_type_generic_ooc">T</span>&gt; </span><span class="meta meta_block meta_block_ooc">{
    <span class="meta meta_definition meta_definition_variable meta_definition_variable_explicit meta_definition_variable_explicit_ooc"><span class="variable variable_other variable_other_ooc">val</span>: <span class="storage storage_type storage_type_ooc">T</span></span>
    <span class="meta meta_function meta_function_params meta_function_params_ooc"><span class="entity entity_name entity_name_function entity_name_function_ooc">init</span>: <span class="storage storage_type storage_type_function storage_type_function_ooc">func</span>(<span class="keyword keyword_operator keyword_operator_assignment keyword_operator_assignment_ooc">=</span><span class="meta meta_function meta_function_parameter meta_function_parameter_name meta_function_parameter_name_ooc"><span class="variable variable_parameter variable_parameter_ooc">val</span></span>)</span> <span class="meta meta_block meta_block_ooc">{}</span>
}</span></span></pre>
			<h2 id="introHeader">Welcome to ooc-lang!</h2>
			<br />
			<p id="introText"><i>ooc</i> is a modern, self-hosting, object-oriented, functional, high-level, low-level programming language. It strives to be powerful, modular, extensible, portable, yet simple and fast. <i>ooc</i> translates to C99 via rock, our self-hosting compiler. Targetting C makes it fast, easy to debug, nice to interface with, ubiquitous, and you can use all your familiar tools: GDB, Valgrind, gprof...</p>
		</div><!-- end .item -->	
	
	</div><!-- end .featured -->
	
	<div class="services group">
		<div>
			<h4><i>ooc</i> @ GitHub</h4>
			<img src="/img/github-logo.png" alt="" />
			<p>The GitHub organization repo is located <a href="http://github.com/ooc-lang">here</a>. Feel free to browse through the language index for ooc related projects.</p>
			<a href="http://github.com/languages/ooc" class="more">index</a>
		</div>
		<div>
			<h4>Introductory guide</h4>
			<img src="/img/guide.gif" alt="" />
			<p>A more comprehensive and up-to-date guide is currently being written. In the meantime, visit the wiki.</p>
			<a href="http://github.com/ooc-lang/Resources/wiki" class="more">wiki</a>
		</div>
		<div>
			<h4>Documentation</h4>
			<img src="/img/docs.png" alt="" />
			<p>There is currently no official <i>ooc</i> documentation system. If you have ideas as to how one should be implemented, stop by the irc channel and drop your feedback. We would greatly appreciate it! The source code for the ooc compiler <i>rock</i> is available on GitHub</p>
			<a href="http://github.com/nddrylliog/rock" class="more">rock</a>
		</div>		
	</div><!-- end .services -->
	
	<div style="display:none;" id="more">
	  <h1>Getting started with <i>rock</i></h1>
	  <hr/>
	  <ol>
	    <li>1. Fetch the source code from the git repo</li>
	    <li>2. Compile against latest bootstrap, which is generated by Alpaca</li>
	  </ol><br/>
	  <p>This leaves you with the latest version of <i>rock</i>. You can now use it to compile <i>ooc</i> programs.</p><br/>
	  <h2>Behind the scenes</h2>
	  <hr/>
	  <p>When a new revision to the <i>rock</i> compiler is pushed to GitHub, Alpaca is notified. After compilation, Alpaca produces 3 files, all of which you can download from the <a href="/alpaca/index">dashboard</a>.</p><br/>
	  <code>make rescue</code> simply runs the following commands:
	  <pre class="syntax sh">git pull
rm -rf build/
wget http://commondatastorage.googleapis.com/rock-linux/rock-bootstrap-only.tar.bz2 -O - | tar xjvmp
$(MAKE) clean bootstrap</pre><br/>
    <h1>Curious or Confused?</h1>
    <hr/>
    <p><a href="http://webchat.freenode.net/?nick=llama_.....&channels=ooc-lang&uio=OT10cnVlJjExPTIwNQa5">#ooc-lang</a> at Freenode</p>
    <p><a href="mailto:ooc-dev@lists.launchpad.net">Mailing list</a></p>
	</div>
	<div style="float:left" class="tagline">
		<h3>Installing <i>ooc</i> is a breeze</h3>
		<p>1. <code>git clone http://github.com/nddrylliog/rock.git</code></p>
		<br/>
		<p>2. <code>cd rock && make rescue</code></p>
		<a href="#more" class="more" rel="facebox">more</a>
	</div><!-- end. tagline -->
	<div style="float:right; width:235px"class="tagline">
		<h3>Alpaca build system</h3>
		<%= raw @linux %>
		<br/>
		<%= link_to 'Dashboard', alpaca_index_path, :style => 'float:right; font-size: 15px; color: #A0A; font-weight: bold;' %>
	</div><!-- end. tagline -->
	<div class="group">
		<div class="quote">
			<h3>#ooc-lang</h3>
			<p>#ooc-lang is where the amazing <i>ooc</i> community comes through. You will feel welcome and right at home with your buddies. Constructive (and occasional destructive) criticism is encouraged. You are bound to find at least a couple members from the core development team on at any given point throughout the day. After all, we come from around the globe. It takes a little to contribute a lot.</p>
			<a href="http://webchat.freenode.net/?nick=llama_.....&channels=ooc-lang&uio=OT10cnVlJjExPTIwNQa5" class="request">#ooc-lang</a>
		</div><!-- end .quote -->
		
		<div class="clients">
			<h4>oocasts</h4>
			<ul class="group">
				<li><a href="http://blip.tv/file/3857686">Introduction</a></li>
				<li><a href="http://blip.tv/file/3898063">Explanations</a></li>
			</ul>
		</div><!-- end .clients -->
	</div><!-- end .group -->